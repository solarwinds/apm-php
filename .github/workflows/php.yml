name: PHP CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions: read-all

jobs:
  php:
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        php-version: [ '8.1', '8.2', '8.3' ]
        experimental: [false]
        composer_args: [""]
        include:
          - php-version: 8.4
            experimental: false
            composer_args: "--ignore-platform-reqs"
    env:
      extensions: ast, grpc, opentelemetry, protobuf

    steps:
    - name: Set cache key
      id: key
      run: |
        echo "key=$(date +'%Y-%U')" >> $GITHUB_ENV

    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

    - uses: gacts/run-and-post-run@d803f6920adc9a47eeac4cb6c93dbc2e2890c684 # v1.4.2
      id: post-run-command
      with:
        post: |
          echo "::group::Steps"
          echo "composer=${{steps.composer.outcome}}"
          echo "style=${{steps.style.outcome}}"
          echo "deps=${{steps.deps.outcome}}"
          echo "phan=${{steps.phan.outcome}}"
          echo "psalm=${{steps.psalm.outcome}}"
          echo "phpstan=${{steps.phpstan.outcome}}"
          echo "unit=${{steps.unit.outcome}}"
          echo "::endgroup::"

          if [ ${{ steps.composer.outcome == 'failure' || steps.style.outcome == 'failure' || steps.deps.outcome == 'failure' || steps.phan.outcome == 'failure' || steps.psalm.outcome == 'failure' || steps.phpstan.outcome == 'failure' || steps.unit.outcome == 'failure' }} == true ]; then \
            echo "::error::One or more steps failed"; \
          fi

    - name: Setup cache environment
      id: extcache
      uses: shivammathur/cache-extensions@ed47a55c463bf49c0de08e5290a3d55208e2c287 # v1
      with:
        php-version: ${{ matrix.php-version }}
        extensions: ${{ env.extensions }}
        key: ${{ env.key }}

    - name: Cache extensions
      uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
      with:
        path: ${{ steps.extcache.outputs.dir }}
        key: ${{ steps.extcache.outputs.key }}
        restore-keys: ${{ steps.extcache.outputs.key }}

    - name: Setup PHP
      uses: shivammathur/setup-php@ec406be512d7077f68eed36e63f4d91bc006edc4 # v2
      with:
        php-version: ${{ matrix.php-version }}
        coverage: xdebug
        tools: php-cs-fixer
        extensions: ${{ env.extensions }}

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
      with:
        path: vendor
        key: ${{ runner.os }}-${{ matrix.php-version }}-php-${{ hashFiles('**/composer.json') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.php-version }}-php-

    - name: Cache test tools
      id: test-tools-cache
      uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
      with:
        path: vendor-bin
        key: ${{ runner.os }}-${{ matrix.php-version }}-php-${{ hashFiles('**/composer.json') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.php-version }}-php-

    - name: Install dependencies
      id: composer
      if: steps.composer-cache.outputs.cache-hit != 'true'
      run: composer install --prefer-dist --no-progress ${{ matrix.composer_args }}

    # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md

    # - name: Run test suite
    #   run: composer run-script test
    - name: Check Style
      id: style
      continue-on-error: ${{ matrix.experimental }}
      env:
        PHP_CS_FIXER_IGNORE_ENV: 1
      run: vendor-bin/php-cs-fixer/vendor/bin/php-cs-fixer fix --config=.php-cs-fixer.php --dry-run --stop-on-violation --using-cache=no -vvv

    - name: Check Dependencies
      id: deps
      continue-on-error: ${{ matrix.experimental }}
      run: vendor-bin/deptrac/vendor/bin/deptrac --formatter=github-actions --report-uncovered

    - name: Run Phan
      id: phan
      continue-on-error: ${{ matrix.experimental }}
      env:
        XDEBUG_MODE: off
        PHAN_DISABLE_XDEBUG_WARN: 1
      run: vendor-bin/phan/vendor/bin/phan

    - name: Run Psalm
      id: psalm
      continue-on-error: ${{ matrix.experimental }}
      run: vendor-bin/psalm/vendor/bin/psalm --output-format=github

    - name: Run Phpstan
      id: phpstan
      continue-on-error: ${{ matrix.experimental }}
      run: vendor/bin/phpstan analyse --error-format=github

    - name: Run PHPUnit (unit tests)
      id: unit
      continue-on-error: ${{ matrix.experimental }}
      env:
        OTEL_LOG_LEVEL: none
        SW_APM_SERVICE_KEY: ${{ secrets.SW_APM_SERVICE_KEY }}
      run: php -dzend.assertions=1 vendor/bin/phpunit --coverage-text --coverage-clover=coverage.clover --testsuite unit

    - name: Code Coverage
      uses: codecov/codecov-action@fdcc8476540edceab3de004e990f80d881c6cc00 # v5.5.0
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.clover
        flags: ${{ matrix.php-version }}
        verbose: false
